diff --git a/asm.h b/asm.h
index b8a7353..c7c233e 100644
--- a/asm.h
+++ b/asm.h
@@ -1,3 +1,5 @@
+#ifndef _ASM_H_
+#define _ASM_H_
 //
 // assembler macros to create x86 segments
 //
@@ -16,3 +18,5 @@
 #define STA_X     0x8       // Executable segment
 #define STA_W     0x2       // Writeable (non-executable segments)
 #define STA_R     0x2       // Readable (executable segments)
+
+#endif
diff --git a/buf.h b/buf.h
index 3266495..364c1dc 100644
--- a/buf.h
+++ b/buf.h
@@ -1,3 +1,6 @@
+#ifndef _BUF_H_
+#define _BUF_H_
+
 struct buf {
   int flags;
   uint dev;
@@ -12,3 +15,4 @@ struct buf {
 #define B_VALID 0x2  // buffer has been read from disk
 #define B_DIRTY 0x4  // buffer needs to be written to disk
 
+#endif
diff --git a/date.h b/date.h
index 94aec4b..999dcb5 100644
--- a/date.h
+++ b/date.h
@@ -1,3 +1,6 @@
+#ifndef _DATE_H_
+#define _DATE_H_
+
 struct rtcdate {
   uint second;
   uint minute;
@@ -6,3 +9,5 @@ struct rtcdate {
   uint month;
   uint year;
 };
+
+#endif
diff --git a/defs.h b/defs.h
index 82fb982..1e157e8 100644
--- a/defs.h
+++ b/defs.h
@@ -1,3 +1,6 @@
+#ifndef _DEFS_H_
+#define _DEFS_H_
+
 struct buf;
 struct context;
 struct file;
@@ -188,3 +191,5 @@ void            clearpteu(pde_t *pgdir, char *uva);
 
 // number of elements in fixed-size array
 #define NELEM(x) (sizeof(x)/sizeof((x)[0]))
+
+#endif
diff --git a/elf.h b/elf.h
index d16c967..a515888 100644
--- a/elf.h
+++ b/elf.h
@@ -1,3 +1,6 @@
+#ifndef _ELF_H_
+#define _ELF_H_
+
 // Format of an ELF executable file
 
 #define ELF_MAGIC 0x464C457FU  // "\x7FELF" in little endian
@@ -40,3 +43,5 @@ struct proghdr {
 #define ELF_PROG_FLAG_EXEC      1
 #define ELF_PROG_FLAG_WRITE     2
 #define ELF_PROG_FLAG_READ      4
+
+#endif
diff --git a/fcntl.h b/fcntl.h
index d565483..38908e5 100644
--- a/fcntl.h
+++ b/fcntl.h
@@ -1,4 +1,9 @@
+#ifndef _FCNTL_H_
+#define _FCNTL_H_
+
 #define O_RDONLY  0x000
 #define O_WRONLY  0x001
 #define O_RDWR    0x002
 #define O_CREATE  0x200
+
+#endif
diff --git a/file.h b/file.h
index 0990c82..3292418 100644
--- a/file.h
+++ b/file.h
@@ -1,3 +1,6 @@
+#ifndef _FILE_H_
+#define _FILE_H_
+
 struct file {
   enum { FD_NONE, FD_PIPE, FD_INODE } type;
   int ref; // reference count
@@ -35,3 +38,5 @@ struct devsw {
 extern struct devsw devsw[];
 
 #define CONSOLE 1
+
+#endif
diff --git a/fs.h b/fs.h
index 3214f1d..db9b8ce 100644
--- a/fs.h
+++ b/fs.h
@@ -1,3 +1,6 @@
+#ifndef _FS_H_
+#define _FS_H_
+
 // On-disk file system format.
 // Both the kernel and user programs use this header file.
 
@@ -55,3 +58,4 @@ struct dirent {
   char name[DIRSIZ];
 };
 
+#endif
diff --git a/kbd.h b/kbd.h
index babbd6e..bb28b68 100644
--- a/kbd.h
+++ b/kbd.h
@@ -1,3 +1,6 @@
+#ifndef _KBD_H_
+#define _KBD_H_
+
 // PC keyboard interface constants
 
 #define KBSTATP         0x64    // kbd controller status port(I)
@@ -110,3 +113,4 @@ static uchar ctlmap[256] =
   [0xD2] KEY_INS,   [0xD3] KEY_DEL
 };
 
+#endif
diff --git a/memlayout.h b/memlayout.h
index d1615f7..6899b88 100644
--- a/memlayout.h
+++ b/memlayout.h
@@ -1,3 +1,6 @@
+#ifndef _MEMLAYOUT_H_
+#define _MEMLAYOUT_H_
+
 // Memory layout
 
 #define EXTMEM  0x100000            // Start of extended memory
@@ -13,3 +16,5 @@
 
 #define V2P_WO(x) ((x) - KERNBASE)    // same as V2P, but without casts
 #define P2V_WO(x) ((x) + KERNBASE)    // same as P2V, but without casts
+
+#endif
diff --git a/mmu.h b/mmu.h
index a82d8e2..875031c 100644
--- a/mmu.h
+++ b/mmu.h
@@ -1,3 +1,6 @@
+#ifndef _MMU_H_
+#define _MMU_H_
+
 // This file contains definitions for the
 // x86 memory management unit (MMU).
 
@@ -179,3 +182,5 @@ struct gatedesc {
 }
 
 #endif
+
+#endif
diff --git a/mp.h b/mp.h
index 4d17283..f88fc6c 100644
--- a/mp.h
+++ b/mp.h
@@ -1,3 +1,6 @@
+#ifndef _MP_H_
+#define _MP_H_
+
 // See MultiProcessor Specification Version 1.[14]
 
 struct mp {             // floating pointer
@@ -54,3 +57,5 @@ struct mpioapic {       // I/O APIC table entry
 
 //PAGEBREAK!
 // Blank page.
+
+#endif
diff --git a/param.h b/param.h
index a7e90ef..b2185ac 100644
--- a/param.h
+++ b/param.h
@@ -1,3 +1,6 @@
+#ifndef _PARAM_H_
+#define _PARAM_H_
+
 #define NPROC        64  // maximum number of processes
 #define KSTACKSIZE 4096  // size of per-process kernel stack
 #define NCPU          8  // maximum number of CPUs
@@ -12,3 +15,4 @@
 #define NBUF         (MAXOPBLOCKS*3)  // size of disk block cache
 #define FSSIZE       1000  // size of file system in blocks
 
+#endif
diff --git a/prioritytest.c b/prioritytest.c
index df36032..2e7547c 100644
--- a/prioritytest.c
+++ b/prioritytest.c
@@ -21,6 +21,7 @@ int main(int argc, char const *argv[])
 		if (pid > 0)
 		{
 			pid = fork();
+            break;
 		}
 	}
 
@@ -46,5 +47,4 @@ int main(int argc, char const *argv[])
 	}
 
 	exit();
-	return 0;
-}
\ No newline at end of file
+}
diff --git a/proc.h b/proc.h
index 1647114..fb66616 100644
--- a/proc.h
+++ b/proc.h
@@ -1,3 +1,6 @@
+#ifndef _PROC_H_
+#define _PROC_H_
+
 // Per-CPU state
 struct cpu {
   uchar apicid;                // Local APIC ID
@@ -56,3 +59,5 @@ struct proc {
 //   original data and bss
 //   fixed-size stack
 //   expandable heap
+
+#endif
diff --git a/sleeplock.h b/sleeplock.h
index 110e6f3..da8c29a 100644
--- a/sleeplock.h
+++ b/sleeplock.h
@@ -1,3 +1,6 @@
+#ifndef _SLEEPLOCK_H_
+#define _SLEEPLOCK_H_
+
 // Long-term locks for processes
 struct sleeplock {
   uint locked;       // Is the lock held?
@@ -8,3 +11,4 @@ struct sleeplock {
   int pid;           // Process holding lock
 };
 
+#endif
diff --git a/spinlock.h b/spinlock.h
index 0a9d8e2..48e69fa 100644
--- a/spinlock.h
+++ b/spinlock.h
@@ -1,3 +1,6 @@
+#ifndef _SPINLOCK_H_
+#define _SPINLOCK_H_
+
 // Mutual exclusion lock.
 struct spinlock {
   uint locked;       // Is the lock held?
@@ -9,3 +12,4 @@ struct spinlock {
                      // that locked the lock.
 };
 
+#endif
diff --git a/stat.h b/stat.h
index 8a80933..a10ba01 100644
--- a/stat.h
+++ b/stat.h
@@ -1,3 +1,6 @@
+#ifndef _STAT_H_
+#define _STAT_H_
+
 #define T_DIR  1   // Directory
 #define T_FILE 2   // File
 #define T_DEV  3   // Device
@@ -9,3 +12,5 @@ struct stat {
   short nlink; // Number of links to file
   uint size;   // Size of file in bytes
 };
+
+#endif
diff --git a/syscall.h b/syscall.h
index bc5f356..0a4122d 100644
--- a/syscall.h
+++ b/syscall.h
@@ -1,3 +1,6 @@
+#ifndef _SYSCALL_H_
+#define _SYSCALL_H_
+
 // System call numbers
 #define SYS_fork    1
 #define SYS_exit    2
@@ -20,3 +23,5 @@
 #define SYS_link   19
 #define SYS_mkdir  20
 #define SYS_close  21
+
+#endif
diff --git a/traps.h b/traps.h
index 0bd1fd8..9ea63a0 100644
--- a/traps.h
+++ b/traps.h
@@ -1,3 +1,6 @@
+#ifndef _TRAPS_H_
+#define _TRAPS_H_
+
 // x86 trap and interrupt constants.
 
 // Processor-defined:
@@ -36,3 +39,4 @@
 #define IRQ_ERROR       19
 #define IRQ_SPURIOUS    31
 
+#endif
diff --git a/types.h b/types.h
index e4adf64..f0b5cf7 100644
--- a/types.h
+++ b/types.h
@@ -1,4 +1,9 @@
+#ifndef _TYPES_H_
+#define _TYPES_H_
+
 typedef unsigned int   uint;
 typedef unsigned short ushort;
 typedef unsigned char  uchar;
 typedef uint pde_t;
+
+#endif
diff --git a/user.h b/user.h
index 4f99c52..48deb67 100644
--- a/user.h
+++ b/user.h
@@ -1,3 +1,6 @@
+#ifndef _USER_H_
+#define _USER_H_
+
 struct stat;
 struct rtcdate;
 
@@ -37,3 +40,5 @@ void* memset(void*, int, uint);
 void* malloc(uint);
 void free(void*);
 int atoi(const char*);
+
+#endif
diff --git a/x86.h b/x86.h
index 07312a5..446aed6 100644
--- a/x86.h
+++ b/x86.h
@@ -1,3 +1,6 @@
+#ifndef _X86_H_
+#define _X86_H_
+
 // Routines to let C code use special x86 instructions.
 
 static inline uchar
@@ -181,3 +184,5 @@ struct trapframe {
   ushort ss;
   ushort padding6;
 };
+
+#endif
